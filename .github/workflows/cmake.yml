name: Build all

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # This makes it correctly use C++11 API on GCC by default.
  CONAN_V2_MODE: 1
  CONAN_REVISIONS_ENABLED: 1
  CONAN_SCM_TO_CONANDATA: 1
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
  CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022 ]

    steps:

      - name: Config DirectX
        if: runner.os == 'Windows'
        run: echo "DXSDK_DIR=$HOME/cache/" >> $GITHUB_ENV
        shell: bash

      - name: Cache
        if: runner.os == 'Windows'
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/cache
          key: cache

      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Conan
        shell: bash
        run: |
          pip install -r .github/workflows/requirements.txt
          conan --version
          conan user
          conan remote add worldforge https://artifactory.ogenvik.org/artifactory/api/conan/conan
          conan profile new default --detect

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Install needed Linux system packages
        if: runner.os == 'Linux'
        shell: bash
        # We need GLU installed on Ubuntu 22.04 (as it requires opengl.pc which is provided by libopengl-dev,
        #  but isn't a dependency to libglu-dev)
        run: |
          sudo apt install libopengl-dev

      - name: Install needed Windows system packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o _DX2010_.exe
          7z x _DX2010_.exe DXSDK/Include -o_DX2010_
          7z x _DX2010_.exe DXSDK/Lib/x86 -o_DX2010_
          mv _DX2010_/DXSDK $HOME/cache
          rm -fR _DX*_ _DX*_.exe
        shell: bash

      - name: Have Conan install packages
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          (cd ../tools/conan && ./build_all.sh)
          if [[ x"$CONAN_PASSWORD" != "x" && x"$CONAN_LOGIN_USERNAME" != "x" ]]; then
            conan user -p $CONAN_PASSWORD -r worldforge $CONAN_LOGIN_USERNAME
            conan upload "*" -r worldforge -c --all
          fi
          conan install .. -pr default --build=missing --update
          if [[ x"$CONAN_PASSWORD" != "x" && x"$CONAN_LOGIN_USERNAME" != "x" ]]; then
            conan user -p $CONAN_PASSWORD -r worldforge $CONAN_LOGIN_USERNAME
            conan upload "*" -r worldforge -c --all
          fi

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=ON -DPython3_ROOT_DIR=$Python3_ROOT_DIR

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

