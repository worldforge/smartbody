viewer = getViewer()
if viewer is not None:
	viewer.show()
else:
	print 'viewer not found'

sscale = 1.0/scene.getScale()

camera = getCamera()
camera.setEye(0*sscale, 1.66*sscale, 1.85*sscale)
camera.setCenter(0, .92*sscale, 0)

cameraPawn = scene.createPawn("camera")
cameraPos = SrVec(0, 1.66*sscale, 1.85*sscale)
cameraPawn.setPosition(cameraPos)


# Autogenerated by SmartBody
# -------------------- lights
print "Save Lights"

# ---- light: light0
obj = scene.getPawn("light0")
if obj == None:
	obj = scene.createPawn("light0")
obj.setPosition(SrVec(5, 0, 5))
obj.setOrientation(SrQuat(0.585059, -0.552663, 0.434825, 0.403976))
attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
attr.setDefaultValue("null")
validValues = StringVec()
validValues.append("null")
validValues.append("sphere")
validValues.append("box")
validValues.append("capsule")
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
attr.setDefaultValue(False)
attr = obj.createBoolAttribute("enabled", True, True, "LightParameters", 200, False, False, False, "Is the light enabled?")
attr.setDefaultValue(True)
attr = obj.createVec3Attribute("lightAmbientColor",  0, 0, 0, True, "LightParameters", 220, False, False, False, " Ambient light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightCastShadow", True, True, "LightParameters", 300, False, False, False, "Does the light cast shadow?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightConstantAttenuation", 1, True, "LightParameters", 270, False, False, False, "Constant attenuation")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("lightDiffuseColor",  1, 0.95, 0.8, True, "LightParameters", 210, False, False, False, " Diffuse light color")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0.95)
vec.setData(2, 0.8)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightIsDirectional", True, True, "LightParameters", 202, False, False, False, "Is the light directional?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightLinearAttenuation", 1, True, "LightParameters", 280, False, False, False, " Linear attenuation.")
attr.setDefaultValue(1)
attr = obj.createDoubleAttribute("lightQuadraticAttenuation", 0, True, "LightParameters", 290, False, False, False, "Quadratic attenuation")
attr.setDefaultValue(0)
attr = obj.createIntAttribute("lightShadowMapSize", 1024, True, "LightParameters", 310, False, False, False, "Size of the shadow map")
attr.setDefaultValue(1024)
attr = obj.createVec3Attribute("lightSpecularColor",  0, 0, 0, True, "LightParameters", 230, False, False, False, "Specular light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotCutoff", 90, True, "LightParameters", 260, False, False, False, "Spotlight cutoff angle")
attr.setDefaultValue(90)
attr = obj.createVec3Attribute("lightSpotDirection",  0, 0, -1, True, "LightParameters", 250, False, False, False, "Spotlight direction")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, -1)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotExponent", 0, True, "LightParameters", 240, False, False, False, " Spotlight exponent.")
attr.setDefaultValue(0)
attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
attr.setDefaultValue("")
validValues = StringVec()
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("posX", 5, True, "transform", 10, False, False, False, "X position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posY", 0, True, "transform", 20, False, False, False, "Y position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posZ", 5, True, "transform", 30, False, False, False, "Z position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotX", -86.3894, True, "transform", 40, False, False, False, "X rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotY", -0.000147094, True, "transform", 50, False, False, False, "Y rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotZ", 21.6001, True, "transform", 60, False, False, False, "Z rotation")
attr.setDefaultValue(0)
attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
attr.setDefaultValue(True)

# ---- light: light1
obj = scene.getPawn("light1")
if obj == None:
	obj = scene.createPawn("light1")
obj.setPosition(SrVec(-5, 1.71, 10))
obj.setOrientation(SrQuat(0.700054, -0.657335, -0.190973, -0.203384))
attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
attr.setDefaultValue("null")
validValues = StringVec()
validValues.append("null")
validValues.append("sphere")
validValues.append("box")
validValues.append("capsule")
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
attr.setDefaultValue(False)
attr = obj.createBoolAttribute("enabled", True, True, "LightParameters", 200, False, False, False, "Is the light enabled?")
attr.setDefaultValue(True)
attr = obj.createVec3Attribute("lightAmbientColor",  0, 0, 0, True, "LightParameters", 220, False, False, False, " Ambient light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightCastShadow", True, True, "LightParameters", 300, False, False, False, "Does the light cast shadow?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightConstantAttenuation", 1, True, "LightParameters", 270, False, False, False, "Constant attenuation")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("lightDiffuseColor",  1, 0.95, 0.8, True, "LightParameters", 210, False, False, False, " Diffuse light color")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0.95)
vec.setData(2, 0.8)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightIsDirectional", True, True, "LightParameters", 202, False, False, False, "Is the light directional?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightLinearAttenuation", 1, True, "LightParameters", 280, False, False, False, " Linear attenuation.")
attr.setDefaultValue(1)
attr = obj.createDoubleAttribute("lightQuadraticAttenuation", 0, True, "LightParameters", 290, False, False, False, "Quadratic attenuation")
attr.setDefaultValue(0)
attr = obj.createIntAttribute("lightShadowMapSize", 1024, True, "LightParameters", 310, False, False, False, "Size of the shadow map")
attr.setDefaultValue(1024)
attr = obj.createVec3Attribute("lightSpecularColor",  0, 0, 0, True, "LightParameters", 230, False, False, False, "Specular light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotCutoff", 90, True, "LightParameters", 260, False, False, False, "Spotlight cutoff angle")
attr.setDefaultValue(90)
attr = obj.createVec3Attribute("lightSpotDirection",  0, 0, -1, True, "LightParameters", 250, False, False, False, "Spotlight direction")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, -1)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotExponent", 0, True, "LightParameters", 240, False, False, False, " Spotlight exponent.")
attr.setDefaultValue(0)
attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
attr.setDefaultValue("")
validValues = StringVec()
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("posX", -5, True, "transform", 10, False, False, False, "X position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posY", 1.71, True, "transform", 20, False, False, False, "Y position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posZ", 10, True, "transform", 30, False, False, False, "Z position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotX", -86.3948, True, "transform", 40, False, False, False, "X rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotY", 4.35535e-006, True, "transform", 50, False, False, False, "Y rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotZ", -32.4, True, "transform", 60, False, False, False, "Z rotation")
attr.setDefaultValue(0)
attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
attr.setDefaultValue(True)

# ---- light: light2
obj = scene.getPawn("light2")
if obj == None:
	obj = scene.createPawn("light2")
obj.setPosition(SrVec(0, 2, -5))
obj.setOrientation(SrQuat(0.563468, 0.826138, 1.60839e-017, 1.60839e-017))
attr = obj.createStringAttribute("collisionShape",  "null", True, "Physics", 350, False, False, False, "Initializes the pawn as a physics object.")
attr.setDefaultValue("null")
validValues = StringVec()
validValues.append("null")
validValues.append("sphere")
validValues.append("box")
validValues.append("capsule")
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("collisionShapeScale",  1, 1, 1, True, "Physics", 360, False, False, False, "Scaling of physics-based shape.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 1)
vec.setData(2, 1)
attr.setDefaultValue(vec)
attr = obj.createVec3Attribute("color",  1, 0, 0, True, "Display", 6, False, False, False, "Object color.")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createActionAttribute("createPhysics",  True, "Physics", 300, False, False, False, "Initializes the pawn as a physics object.")
attr = obj.createBoolAttribute("enablePhysics", False, True, "Physics", 310, False, False, False, "Enables or disables physics for this pawn.")
attr.setDefaultValue(False)
attr = obj.createBoolAttribute("enabled", True, True, "LightParameters", 200, False, False, False, "Is the light enabled?")
attr.setDefaultValue(True)
attr = obj.createVec3Attribute("lightAmbientColor",  0, 0, 0, True, "LightParameters", 220, False, False, False, " Ambient light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightCastShadow", True, True, "LightParameters", 300, False, False, False, "Does the light cast shadow?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightConstantAttenuation", 1, True, "LightParameters", 270, False, False, False, "Constant attenuation")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("lightDiffuseColor",  1, 0.95, 0.8, True, "LightParameters", 210, False, False, False, " Diffuse light color")
vec = SrVec()
vec.setData(0, 1)
vec.setData(1, 0.95)
vec.setData(2, 0.8)
attr.setDefaultValue(vec)
attr = obj.createBoolAttribute("lightIsDirectional", True, True, "LightParameters", 202, False, False, False, "Is the light directional?")
attr.setDefaultValue(True)
attr = obj.createDoubleAttribute("lightLinearAttenuation", 1, True, "LightParameters", 280, False, False, False, " Linear attenuation.")
attr.setDefaultValue(1)
attr = obj.createDoubleAttribute("lightQuadraticAttenuation", 0, True, "LightParameters", 290, False, False, False, "Quadratic attenuation")
attr.setDefaultValue(0)
attr = obj.createIntAttribute("lightShadowMapSize", 1024, True, "LightParameters", 310, False, False, False, "Size of the shadow map")
attr.setDefaultValue(1024)
attr = obj.createVec3Attribute("lightSpecularColor",  0, 0, 0, True, "LightParameters", 230, False, False, False, "Specular light color")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotCutoff", 90, True, "LightParameters", 260, False, False, False, "Spotlight cutoff angle")
attr.setDefaultValue(90)
attr = obj.createVec3Attribute("lightSpotDirection",  0, 0, -1, True, "LightParameters", 250, False, False, False, "Spotlight direction")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, -1)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("lightSpotExponent", 0, True, "LightParameters", 240, False, False, False, " Spotlight exponent.")
attr.setDefaultValue(0)
attr = obj.createStringAttribute("mesh",  "", True, "Display", 400, False, False, False, "Geometry/mesh")
attr.setDefaultValue("")
validValues = StringVec()
attr.setValidValues(validValues)
attr = obj.createVec3Attribute("meshRotation",  0, 0, 0, True, "Display", 430, False, False, False, "Mesh rotation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("meshScale", 1, True, "Display", 410, False, False, False, "Scale of geometry/mesh")
attr.setDefaultValue(1)
attr = obj.createVec3Attribute("meshTranslation",  0, 0, 0, True, "Display", 420, False, False, False, "Mesh translation offset")
vec = SrVec()
vec.setData(0, 0)
vec.setData(1, 0)
vec.setData(2, 0)
attr.setDefaultValue(vec)
attr = obj.createDoubleAttribute("posX", 0, True, "transform", 10, False, False, False, "X position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posY", 2, True, "transform", 20, False, False, False, "Y position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("posZ", -5, True, "transform", 30, False, False, False, "Z position")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotX", 68.5919, True, "transform", 40, False, False, False, "X rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotY", 180, True, "transform", 50, False, False, False, "Y rotation")
attr.setDefaultValue(0)
attr = obj.createDoubleAttribute("rotZ", 180, True, "transform", 60, False, False, False, "Z rotation")
attr.setDefaultValue(0)
attr = obj.createBoolAttribute("visible", True, True, "Display", 5, False, False, False, "Whether the object is visible.")
attr.setDefaultValue(True)

